from aiogram.exceptions import TelegramBadRequest
from aiogram.types import Message
from aiogram_dialog import (
    DialogManager,
)

from src.database.dataclasses.chat_group import ChatGroup
from src.database.dataclasses.topic import Topic
from src.database.dataclasses.vacancy import Vacancy
from src.logs.logger import bot_logger

exception_message = "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ HR-–º–µ–Ω–µ–¥–∂–µ—Ä–∞–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –æ–± –æ—à–∏–±–∫–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É —á–µ—Ä–µ–∑ HH."


async def user_question_input(
        message: Message,
        _message_input,
        dialog_manager: DialogManager,
):
    vacancy_id = dialog_manager.dialog_data['vacancy_id']
    vacancy_data = Vacancy.get_by_id(vacancy_id=vacancy_id)
    user_question = (message.text or "").strip()
    if not user_question:
        await message.answer('ü§î –ü–æ—Ö–æ–∂–µ, –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ...')
        return

    user_id = message.from_user.id
    bot = message.bot

    chat_group = ChatGroup.get()
    if not chat_group:
        await message.answer(exception_message)
        bot_logger.warning(
            "‚ö†Ô∏è –ê–¥–º–∏–Ω—Å–∫–∞—è –≥—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞. "
        )
        return

    topic = Topic.get_by_user_id(user_id)

    try:
        # –µ—Å–ª–∏ —Ç–æ–ø–∏–∫–∞ –Ω–µ—Ç –≤ –ë–î ‚Äî —Å–æ–∑–¥–∞—ë–º
        if not topic:
            forum_topic = await bot.create_forum_topic(chat_id=chat_group.group_id, name=str(user_id))
            topic = Topic.create(user_id=user_id, topic_id=forum_topic.message_thread_id)

        # –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫
        first_name = message.from_user.first_name or "–ò–º—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        last_name = message.from_user.last_name or "–§–∞–º–∏–ª–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        username = f"@{message.from_user.username}" if message.from_user.username else "Username –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"

        await bot.send_message(
            chat_id=chat_group.group_id,
            message_thread_id=topic.topic_id,
            text=(
                f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {first_name} {last_name} ({username}, ID: {user_id})\n"
                f"–ü–æ –≤–∞–∫–∞–Ω—Å–∏–∏: {vacancy_data.title}\n\n"
                f"{user_question}"
            )
        )

    except TelegramBadRequest as e:
        # –µ—Å–ª–∏ —Ç–æ–ø–∏–∫ —É–¥–∞–ª–∏–ª–∏ / message_thread_id –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º
        text = str(e).lower()
        if "message_thread_id" in text or "thread" in text or "not found" in text or "topic" in text:
            try:
                forum_topic = await bot.create_forum_topic(chat_id=chat_group.group_id, name=str(user_id))
                Topic.update_topic_id(user_id=user_id, new_topic_id=forum_topic.message_thread_id)

                await bot.send_message(
                    chat_id=chat_group.group_id,
                    message_thread_id=forum_topic.message_thread_id,
                    text=f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.from_user.full_name} ({user_id}) –ø–æ –≤–∞–∫–∞–Ω—Å–∏–∏ {vacancy_data.title}:\n\n{user_question}"
                )
            except Exception as exception:
                bot_logger.warning(
                    f'‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º. –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–ø–∏–∫–∞. {user_id} {exception}'
                )
                await message.answer(exception_message)
                return
        else:
            await message.answer(exception_message)
            return
    except Exception as exception:
        await message.answer(exception_message)
        bot_logger.warning(
            f'‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º. –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–ø–∏–∫–∞. {user_id} {exception}'
        )
        return

    # –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer("‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–Ω–¥–∂–µ—Ä–∞–º. –û–Ω–∏ –æ—Ç–≤–µ—Ç—è—Ç –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
