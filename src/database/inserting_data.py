from src.database.configuration.connection import get_connection


def insert_test_data():
    conn = get_connection()
    cursor = conn.cursor()

    # –î–æ–±–∞–≤–ª—è–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏ —Å —Ñ–ª–∞–≥–æ–º hidden –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0
    vacancies = [
        ("Python Developer", 0),
        ("Frontend Developer", 0),
        ("Data Analyst", 1),  # —Å–∫—Ä—ã—Ç–∞—è –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
        ("DevOps Engineer", 0),
        ("Product Manager", 0)
    ]
    cursor.executemany("INSERT INTO vacancy (title, hidden) VALUES (?, ?)", vacancies)

    # –ü–æ–ª—É—á–∞–µ–º ID –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π
    cursor.execute("SELECT id, title FROM vacancy")
    vacancy_rows = cursor.fetchall()

    # –ù–∞–±–æ—Ä –≤–æ–ø—Ä–æ—Å–æ–≤/–æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏
    faq_templates = {
        "Python Developer": [
            ("–ß–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è Python Dev?", "–ü–∏—à–µ—Ç backend, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é –∏ —Å–∫—Ä–∏–ø—Ç—ã."),
            ("–ö–∞–∫–∏–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ –Ω—É–∂–Ω—ã?", "Django, FastAPI, Flask."),
            ("–ù—É–∂–µ–Ω –ª–∏ –æ–ø—ã—Ç –≤ DevOps?", "–ñ–µ–ª–∞—Ç–µ–ª–µ–Ω, –æ—Å–æ–±–µ–Ω–Ω–æ Docker –∏ CI/CD."),
        ],
        "Frontend Developer": [
            ("–ß—Ç–æ –¥–µ–ª–∞–µ—Ç Frontend Dev?", "–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ UI."),
            ("–ö–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤–∞–∂–Ω—ã?", "React, TypeScript, HTML, CSS."),
            ("–ù—É–∂–µ–Ω –ª–∏ –æ–ø—ã—Ç —Å UI/UX?", "–î–∞, –±–∞–∑–æ–≤–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ UX –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ."),
        ],
        "Data Analyst": [
            ("–ß–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –∞–Ω–∞–ª–∏—Ç–∏–∫?", "–°–æ–±–∏—Ä–∞–µ—Ç, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ."),
            ("–ö–∞–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã?", "SQL, Excel, Power BI, Python."),
            ("–ù—É–∂–µ–Ω –ª–∏ –æ–ø—ã—Ç –≤ ML?", "–ë—É–¥–µ—Ç –ø–ª—é—Å–æ–º, –Ω–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω."),
            ("–ß—Ç–æ —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π?", "Tableau, Matplotlib, Seaborn."),
        ],
        "DevOps Engineer": [
            ("–ß–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è DevOps?", "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É, CI/CD, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥."),
            ("–ö–∞–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤–∞–∂–Ω—ã?", "Docker, Kubernetes, Jenkins, GitLab CI."),
            ("–ù—É–∂–µ–Ω –ª–∏ –æ–ø—ã—Ç –æ–±–ª–∞–∫–æ–≤?", "–î–∞, AWS –∏–ª–∏ GCP –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è."),
        ],
        "Product Manager": [
            ("–ß—Ç–æ –¥–µ–ª–∞–µ—Ç Product Manager?", "–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã."),
            ("–ö–∞–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –≤–∞–∂–Ω—ã?", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞, –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏."),
            ("–ù—É–∂–µ–Ω –ª–∏ –æ–ø—ã—Ç –≤ Agile?", "–î–∞, –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ Scrum –∏–ª–∏ Kanban."),
        ],
    }

    # –î–æ–±–∞–≤–ª—è–µ–º FAQ
    faq_data = []
    for vac_id, title in vacancy_rows:
        if title in faq_templates:
            for question, answer in faq_templates[title]:
                faq_data.append((vac_id, question, answer))

    cursor.executemany(
        "INSERT INTO faq (vacancy_id, question, answer) VALUES (?, ?, ?)",
        faq_data
    )

    conn.commit()
    conn.close()
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")


if __name__ == "__main__":
    insert_test_data()
    print("üöÄ –í—Å—ë –≥–æ—Ç–æ–≤–æ!")

